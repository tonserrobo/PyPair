Making rotations
Building suffix array column
Building BWT
Populating FM index character counts
Generating k-length seeds
Traceback (most recent call last):
  File "C:\Users\B00460204\OneDrive - Ulster University\Phd - FPGA acceleration in genomics\2020-21 MainResearch\Seed_generation\rapid-SMEM\Rapid-SMEM\gnb_seed_generation\main.py", line 159, in <module>
    main()
  File "C:\Users\B00460204\OneDrive - Ulster University\Phd - FPGA acceleration in genomics\2020-21 MainResearch\Seed_generation\rapid-SMEM\Rapid-SMEM\gnb_seed_generation\main.py", line 127, in main
    training_flag, training_data = generate_training_data(reference_genome, training_iterations, training_flag) #will gen index if does not already exsist
  File "C:\Users\B00460204\OneDrive - Ulster University\Phd - FPGA acceleration in genomics\2020-21 MainResearch\Seed_generation\rapid-SMEM\Rapid-SMEM\gnb_seed_generation\main.py", line 76, in generate_training_data
    training_set = training_data_obj.generate_training_data_2(index, training_iterations)
  File "C:\Users\B00460204\OneDrive - Ulster University\Phd - FPGA acceleration in genomics\2020-21 MainResearch\Seed_generation\rapid-SMEM\Rapid-SMEM\gnb_seed_generation\gen_training_data.py", line 32, in generate_training_data_2
    comp_data = pd.DataFrame(data)
  File "C:\Users\B00460204\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pandas\core\frame.py", line 738, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\B00460204\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pandas\core\internals\construction.py", line 331, in ndarray_to_mgr
    values = _prep_ndarray(values, copy=copy_on_sanitize)
  File "C:\Users\B00460204\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pandas\core\internals\construction.py", line 591, in _prep_ndarray
    raise ValueError(f"Must pass 2-d input. shape={values.shape}")
ValueError: Must pass 2-d input. shape=(4, 5001, 10)